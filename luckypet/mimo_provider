@Library('jenkinslib') _  
//调用方法库文件
def tools = new org.devops.tools()
def luckypet = new org.devops.luckypet()

def skipRemainingStages = false   //当前节点是否跳过
def input_message   //提示语
def randomToken    //发布秘钥
def skipadminUser = false



pipeline {

    agent {
        label 'slave1'
    }

    options {
        timestamps() // 在日志中打印时间
        skipDefaultCheckout() // 删除隐式的checkout scm 语句
        timeout(time:1, unit:'HOURS') // 流水线超时设置为1H
    }

    parameters {
        
        // 基本参数/传参

        string(
            name: "RepoUrl",
            defaultValue: '$GITLAB/mimo-provider.git',
            description: '代码仓库地址'
        )

        string(
            name: 'Tag', 
            defaultValue: 'master', 
            description: '默认分支或者Tag'
        )
        
        choice(
            name: 'Option', 
            choices: ['Deploy', 'Rollback', 'Expand'], 
            description: 'Deploy部署指定Tag; Rollback回滚到指定Tag; Expand快速扩容(不保存yaml文件)'
        )

        string(
            name: "Environment",
            defaultValue: 'dev',
            description: '将要发布的环境'
        )

        // 业务参数/设置默认值

        string(
           name: "Replicas",
           defaultValue: '1',
           description: '副本数(通过k8s部署的服务对应pod数量)'
        )
        
        string(
           name: "Hostname",
           defaultValue: 'luckypet-demo.mimo.immo',
           description: '域名'
        )
        
        string(
           name: "Projectname",
           defaultValue: 'luckypet',
           description: '项目名称'
        )
        
        string(
           name: "Servicename",
           defaultValue: 'mprovider',
           description: '服务名称'
        )
    

    }

    environment {


        // 传参转为环境变量
        tag = "$params.Tag"
        option = "$params.Option"
        url = "$params.RepoUrl"
        envi = "$params.Environment" // dev环境不需要审批
        servicename = "$params.Servicename"
        projectname = "$params.Projectname"


    }

    stages{

        stage('检出最新代码.') {
            steps{
                script {
                    tools.GitCheckOut(tag, url)
                }
            }
        }

        stage('输出与最近一次构建的差异.'){
            steps{
                script{
                    tools.LastChanges()
                }
            }
        }

        stage("编译/制作镜像.") {
           steps{
                script{
                    luckypet.BuildAPIImageAndPush(option, envi, "024905375334.dkr.ecr.ap-southeast-1.amazonaws.com", servicename, tag)
                }
            }
        }

        stage('发布.'){
            steps{
                script{
                    luckypet.Publish(option, envi, "024905375334.dkr.ecr.ap-southeast-1.amazonaws.com", servicename, projectname, tag, "${env.JOB_NAME}")
                }
            }
        }
    }
    
    post {
        always {
            wrap([$class: 'BuildUser']) {
                script{
                    // 邮件
                    // emailext body: '$DEFAULT_CONTENT', mimeType: 'text/html', subject: '$DEFAULT_SUBJECT', to: '$DEFAULT_RECIPIENTS'
                    // emailext body: '$DEFAULT_CONTENT', mimeType: 'text/html', subject: '$DEFAULT_SUBJECT', to: "${env.BUILD_USER}"
                    //telegram通知
                    result = "${currentBuild.currentResult}"
                    // tools.Notify(envi,result)
                }
            }
        }
    }

}
