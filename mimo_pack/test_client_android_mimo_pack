pipeline {
    
    agent {
      label 'macos4'
    }
    
    
    parameters {

        string(
            name: 'Version', 
            defaultValue: '1.0.0', 
            description: 'GitTag/Branch'
        )

        string(
            name: "RepoUrl",
            defaultValue: '$GITLAB/mimo-app-android.git',
            description: '代码仓库地址'
        )

    }

    environment {
        version = "$params.Version"
        url = "$params.RepoUrl"
    }
    
    stages {
        stage('bump version code.'){
            steps{
                sh '''
                cd /Users/apple/Documents/git/jenkins/workspace/bumpVersionCode
                rm -rf mimo
                git clone $GITLAB/mimo-app-android.git
                cp -rf local.properties ./mimo/
                cd mimo
                git checkout $Version
                
                docker run -i --rm --name android_mimo_app -u root -v "/Users/apple/Documents/git/jenkins/workspace/bumpVersionCode/mimo:/data" -v "/home/linxin/jenkins/jenkins_mount/keyStore/mimo-lite:/data/keystore" android:gradle7.5 bash -c "chmod 777 /data/gradlew && cd /data/app && ../gradlew bumpVersionCode"
                git add --all
                git commit -m "bump version code by jenkins."
                
                git push origin $Version
                cd /Users/apple/Documents/git/jenkins/workspace/test_client_android_mimo_pack
                '''
            }
        }
        stage('检出最新代码.') {
            steps{
                script {
                    tools.GitCheckOut(version, url)
                }
            }
        }
        stage('Pack'){
            steps{
                sh '''
     export JAVA_HOME="/usr/bin"
     docker run -i --rm --name android_mimo_app -u root -v "/Users/apple/Documents/git/jenkins/workspace/test_client_android_mimo_pack:/data" -v "/Users/apple/Documents/git/jenkins/keyStore/mimo-lite:/data/keystore" android:gradle7.5 bash -c "chmod 777 /data/gradlew && cd /data/app && ../gradlew $Type --stacktrace"
     
     packageName="app-$stage-$buildType.apk"
     packagePath="$PackagePath/$stage/$buildType"
     mv ./$packagePath/$packageName /Users/apple/Documents/ftp/Share/TestAPP/test_app
     
                '''
            }
        }
        // stage("Send package to ftp server."){
        //     steps{
        //         ftpPublisher alwaysPublishFromMaster: false, continueOnError: false, masterNodeName:'', paramPublish:null, failOnError: false, publishers: [[configName: 'ftptestserver', transfers: [[asciiMode: false, cleanRemote: false, excludes: '', flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/TEST_CLIENT_ANDROID_MIMO', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '$PackageName']], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: true]]            }
        // }
        // stage("Email Notification"){
        //     steps{
        //         emailext body: '$DEFAULT_CONTENT', mimeType: 'text/html', subject: '$DEFAULT_SUBJECT', to: '$DEFAULT_RECIPIENTS,lanronghua,liangyu'
        //     }
        // }
        
        
    }
}

